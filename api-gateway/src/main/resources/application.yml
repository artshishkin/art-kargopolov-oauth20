server:
  port: 8090

app:
  routes:
    uri:
      users-api: http://users-service:8080
      photos-api: http://photos-service:8080
      albums-api: http://albums-service:8080

spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        - id: usersApi
          uri: ${app.routes.uri.users-api}/users/**
          predicates:
            - Path=/users/**
            - Method=POST,PUT,GET,DELETE
          filters:
            - RemoveRequestHeader=Cookie
        - id: albumsApi
          uri: ${app.routes.uri.albums-api}/albums/**
          predicates:
            - Path=/albums/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
        - id: photosApi
          uri: ${app.routes.uri.photos-api}/photos/**
          predicates:
            - Path=/photos/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie

discovery.service.uri: http://discovery-service:8080
eureka:
  client:
    service-url:
      defaultZone: ${discovery.service.uri}/eureka
    enabled: false

management:
  endpoint:
    info:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
info:
  app:
    name: '@project.name@'
    version: '@project.version@'
    encoding: '@project.build.sourceEncoding@'
  service:
    name: ${spring.application.name}

---
spring:
  config:
    activate:
      on-profile: local

discovery.service.uri: http://localhost:8761

eureka:
  client:
    enabled: true
  instance:
    instance-id: ${spring.application.name}:${app.instance_id:${random.value}}

app:
  routes:
    uri:
      users-api: lb://users-service
      photos-api: lb://photos-service
      albums-api: lb://albums-service




